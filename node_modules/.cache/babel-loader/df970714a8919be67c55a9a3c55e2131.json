{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Decks() {\n  _s();\n\n  const [deck, setDeck] = useState({}); //const { deckId } = useParams();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDeck() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks/1`, {\n          signal: abortController.signal\n        });\n        const deck = await response.json();\n        setDeck(deck);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    loadDeck();\n    return () => {\n      abortController.abort(); // cancels any pending request or response\n    };\n  }, []); //if (deck.id) {\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      class: \"btn btn-secondary\",\n      href: \"#\",\n      role: \"button\",\n      children: \"Create deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      width: \"36rem\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"card-header\",\n        children: [deck.name, /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"float-right font-weight-light\",\n          children: \"3 cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"card-text\",\n          children: deck.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-secondary mr-2\",\n          children: \"View\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-primary\",\n          children: \"Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          class: \"btn btn-danger float-right\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this); // return Object.entries(deck).map(([key, value]) => (\n  //   <div key={key}>\n  //     <label>{key}</label>: {JSON.stringify(value)}\n  //     <hr />\n  //   </div>\n  // ));\n  //}\n  //return \"Loading...\";\n}\n\n_s(Decks, \"lRN72Jn4Cfrh8w5aqHHHGLhGRHY=\");\n\n_c = Decks;\nexport default Decks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/Decks.js"],"names":["React","useEffect","useState","useParams","Decks","deck","setDeck","abortController","AbortController","loadDeck","response","fetch","signal","json","error","name","console","log","abort","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC,CADe,CAEf;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAAF,EAAkC;AAC5DC,UAAAA,MAAM,EAAEL,eAAe,CAACK;AADoC,SAAlC,CAA5B;AAGA,cAAMP,IAAI,GAAG,MAAMK,QAAQ,CAACG,IAAT,EAAnB;AACAP,QAAAA,OAAO,CAACD,IAAD,CAAP;AACD,OAND,CAME,OAAOS,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AACF;;AAEDL,IAAAA,QAAQ;AAER,WAAO,MAAM;AACXF,MAAAA,eAAe,CAACW,KAAhB,GADW,CACc;AAC1B,KAFD;AAGD,GAtBQ,EAsBN,EAtBM,CAAT,CAJe,CA4Bf;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BAEE;AAAG,MAAA,KAAK,EAAC,mBAAT;AAA6B,MAAA,IAAI,EAAC,GAAlC;AAAsC,MAAA,IAAI,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAkB,MAAA,KAAK,EAAC,OAAxB;AAAA,8BACE;AAAI,QAAA,KAAK,EAAC,aAAV;AAAA,mBACGb,IAAI,CAACU,IADR,eAEE;AAAG,UAAA,KAAK,EAAC,+BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,+BACE;AAAG,UAAA,KAAK,EAAC,WAAT;AAAA,oBAAsBV,IAAI,CAACc;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,wBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,KAAK,EAAC,4BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA7Be,CA4Df;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD;;GArEQf,K;;KAAAA,K;AAuET,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction Decks() {\r\n  const [deck, setDeck] = useState({});\r\n  //const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function loadDeck() {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/decks/1`, {\r\n          signal: abortController.signal,\r\n        });\r\n        const deck = await response.json();\r\n        setDeck(deck);\r\n      } catch (error) {\r\n        if (error.name !== \"AbortError\") {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    loadDeck();\r\n\r\n    return () => {\r\n      abortController.abort(); // cancels any pending request or response\r\n    };\r\n  }, []);\r\n\r\n  //if (deck.id) {\r\n  return (\r\n    <div className=\"container\">\r\n      {/* TODO: Implement the screen starting here */}\r\n      <a class=\"btn btn-secondary\" href=\"#\" role=\"button\">\r\n        Create deck\r\n      </a>\r\n      <br></br>\r\n      <br></br>\r\n      <div class=\"card\" width=\"36rem\">\r\n        <h5 class=\"card-header\">\r\n          {deck.name}\r\n          <p class=\"float-right font-weight-light\">3 cards</p>\r\n        </h5>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-text\">{deck.description}</p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <a href=\"#\" class=\"btn btn-secondary mr-2\">\r\n            View\r\n          </a>\r\n          <a href=\"#\" class=\"btn btn-primary\">\r\n            Study\r\n          </a>\r\n          <a href=\"#\" class=\"btn btn-danger float-right\">\r\n            Delete\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  // return Object.entries(deck).map(([key, value]) => (\r\n  //   <div key={key}>\r\n  //     <label>{key}</label>: {JSON.stringify(value)}\r\n  //     <hr />\r\n  //   </div>\r\n  // ));\r\n  //}\r\n\r\n  //return \"Loading...\";\r\n}\r\n\r\nexport default Decks;\r\n"]},"metadata":{},"sourceType":"module"}