{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\n\nfunction CardEdit({\n  title\n}) {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId,\n    cardId\n  } = useParams();\n  const [card, setCard] = useState({\n    front: \"\",\n    back: \"\"\n  });\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n    readCard(cardId).then(setCard);\n  }, [deckId, cardId]);\n\n  function doneHandler() {\n    history.push(`/decks/${deck.id}`);\n  }\n\n  function submitHandler(card) {\n    updateCard(card).then(doneHandler);\n  } //   const child = card.id ? (\n  //     <CardForm\n  //       onSubmit={submitHandler}\n  //       onDone={doneHandler}\n  //       deckName={deck.name}\n  //       intialState={card}\n  //       doneButtonLabel=\"Cancel\"\n  //     />\n  //   ) : (\n  //     <p>Loading...</p>\n  //   );\n  //    return ()\n\n}\n\n_s(CardEdit, \"ntxFF3N2HfMoJKvw18Ehukt04ns=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardEdit;\nexport default CardEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardEdit\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/CardEdit.js"],"names":["React","useEffect","useHistory","useParams","readCard","readDeck","updateCard","CardEdit","title","history","deckId","cardId","card","setCard","useState","front","back","deck","setDeck","cards","then","doneHandler","push","id","submitHandler"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA+C,iBAA/C;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA6B;AAAA;;AAC3B,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBR,SAAS,EAApC;AAEA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAAD,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,QAAQ,CAACK,MAAD,CAAR,CAAiBU,IAAjB,CAAsBF,OAAtB;AACAd,IAAAA,QAAQ,CAACO,MAAD,CAAR,CAAiBS,IAAjB,CAAsBP,OAAtB;AACD,GAHQ,EAGN,CAACH,MAAD,EAASC,MAAT,CAHM,CAAT;;AAKA,WAASU,WAAT,GAAuB;AACrBZ,IAAAA,OAAO,CAACa,IAAR,CAAc,UAASL,IAAI,CAACM,EAAG,EAA/B;AACD;;AAED,WAASC,aAAT,CAAuBZ,IAAvB,EAA6B;AAC3BN,IAAAA,UAAU,CAACM,IAAD,CAAV,CAAiBQ,IAAjB,CAAsBC,WAAtB;AACD,GAlB0B,CAoB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD;;GAjCQd,Q;UACSL,U,EACWC,S;;;KAFpBI,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { readCard, readDeck, updateCard } from \"../../utils/api\";\r\n\r\nfunction CardEdit({ title }) {\r\n  const history = useHistory();\r\n  const { deckId, cardId } = useParams();\r\n\r\n  const [card, setCard] = useState({ front: \"\", back: \"\" });\r\n  const [deck, setDeck] = useState({ cards: [] });\r\n\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setDeck);\r\n    readCard(cardId).then(setCard);\r\n  }, [deckId, cardId]);\r\n\r\n  function doneHandler() {\r\n    history.push(`/decks/${deck.id}`);\r\n  }\r\n\r\n  function submitHandler(card) {\r\n    updateCard(card).then(doneHandler);\r\n  }\r\n\r\n  //   const child = card.id ? (\r\n  //     <CardForm\r\n  //       onSubmit={submitHandler}\r\n  //       onDone={doneHandler}\r\n  //       deckName={deck.name}\r\n  //       intialState={card}\r\n  //       doneButtonLabel=\"Cancel\"\r\n  //     />\r\n  //   ) : (\r\n  //     <p>Loading...</p>\r\n  //   );\r\n\r\n  //    return ()\r\n}\r\n\r\nexport default CardEdit;\r\n"]},"metadata":{},"sourceType":"module"}