{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Link, Switch, Route } from \"react-router-dom\";\nimport Study from \"./Study\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Decks({\n  decks,\n  setDecks\n}) {\n  _s();\n\n  //const [decks, setDecks] = useState({});\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadDecks() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks/${deckId}`, {\n          signal: abortController.signal\n        });\n        const decks = await response.json();\n        setDecks(decks);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    loadDecks();\n    return () => {\n      abortController.abort(); // cancels any pending request or response\n    };\n  }, [deckId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: decks.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Decks, \"HVFefW5KCGyPdVIEoeyJLI81F8c=\", false, function () {\n  return [useParams];\n});\n\n_c = Decks;\nexport default Decks; // function Decks({ flashcards }) {\n//   const [decks, setDecks] = useState({});\n//   //const { deckId } = useParams();\n//   useEffect(() => {\n//     const abortController = new AbortController();\n//     async function loadDecks() {\n//       try {\n//         const response = await fetch(`http://localhost:5000/decks/1`, {\n//           signal: abortController.signal,\n//         });\n//         const decks = await response.json();\n//         setDeck(decks);\n//       } catch (error) {\n//         if (error.name !== \"AbortError\") {\n//           console.log(error);\n//         }\n//       }\n//     }\n//     loadDecks();\n//     return () => {\n//       abortController.abort(); // cancels any pending request or response\n//     };\n//   }, []);\n//   return (\n//     <div class=\"card\" width=\"36rem\" margin=\"0 auto\">\n//       <h5 class=\"card-header\">\n//         {deck.name}\n//         <p class=\"float-right font-weight-light\">3 cards</p>\n//       </h5>\n//       <div class=\"card-body\">\n//         <p class=\"card-text\">{deck.description}</p>\n//       </div>\n//       <div class=\"card-footer\">\n//         <button class=\"btn btn-secondary mr-2\">View</button>\n//         <Link to=\"Study\">\n//           <button class=\"btn btn-primary\">Study</button>\n//         </Link>\n//         <Route path=\"Study\">\n//           <Study />\n//         </Route>\n//         <button class=\"btn btn-danger float-right\">Delete</button>\n//       </div>\n//     </div>\n//   );\n// }\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/Decks.js"],"names":["React","useEffect","useState","useParams","Link","Switch","Route","Study","Decks","decks","setDecks","deckId","abortController","AbortController","loadDecks","response","fetch","signal","json","error","name","console","log","abort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,kBAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAf,EAAoC;AAAA;;AAClC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaR,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,SAAf,GAA2B;AACzB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BL,MAAO,EAAvC,EAA0C;AACpEM,UAAAA,MAAM,EAAEL,eAAe,CAACK;AAD4C,SAA1C,CAA5B;AAGA,cAAMR,KAAK,GAAG,MAAMM,QAAQ,CAACG,IAAT,EAApB;AACAR,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAND,CAME,OAAOU,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AACF;;AAEDL,IAAAA,SAAS;AAET,WAAO,MAAM;AACXF,MAAAA,eAAe,CAACW,KAAhB,GADW,CACc;AAC1B,KAFD;AAGD,GAtBQ,EAsBN,CAACZ,MAAD,CAtBM,CAAT;AAwBA,sBAAO;AAAA,cAAMF,KAAK,CAACW;AAAZ;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA7BQZ,K;UAEYL,S;;;KAFZK,K;AA+BT,eAAeA,KAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link, Switch, Route } from \"react-router-dom\";\r\nimport Study from \"./Study\";\r\n\r\nfunction Decks({ decks, setDecks }) {\r\n  //const [decks, setDecks] = useState({});\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function loadDecks() {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/decks/${deckId}`, {\r\n          signal: abortController.signal,\r\n        });\r\n        const decks = await response.json();\r\n        setDecks(decks);\r\n      } catch (error) {\r\n        if (error.name !== \"AbortError\") {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    loadDecks();\r\n\r\n    return () => {\r\n      abortController.abort(); // cancels any pending request or response\r\n    };\r\n  }, [deckId]);\r\n\r\n  return <div>{decks.name}</div>;\r\n}\r\n\r\nexport default Decks;\r\n\r\n// function Decks({ flashcards }) {\r\n//   const [decks, setDecks] = useState({});\r\n//   //const { deckId } = useParams();\r\n\r\n//   useEffect(() => {\r\n//     const abortController = new AbortController();\r\n\r\n//     async function loadDecks() {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:5000/decks/1`, {\r\n//           signal: abortController.signal,\r\n//         });\r\n//         const decks = await response.json();\r\n//         setDeck(decks);\r\n//       } catch (error) {\r\n//         if (error.name !== \"AbortError\") {\r\n//           console.log(error);\r\n//         }\r\n//       }\r\n//     }\r\n\r\n//     loadDecks();\r\n\r\n//     return () => {\r\n//       abortController.abort(); // cancels any pending request or response\r\n//     };\r\n//   }, []);\r\n\r\n//   return (\r\n//     <div class=\"card\" width=\"36rem\" margin=\"0 auto\">\r\n//       <h5 class=\"card-header\">\r\n//         {deck.name}\r\n//         <p class=\"float-right font-weight-light\">3 cards</p>\r\n//       </h5>\r\n//       <div class=\"card-body\">\r\n//         <p class=\"card-text\">{deck.description}</p>\r\n//       </div>\r\n//       <div class=\"card-footer\">\r\n//         <button class=\"btn btn-secondary mr-2\">View</button>\r\n//         <Link to=\"Study\">\r\n//           <button class=\"btn btn-primary\">Study</button>\r\n//         </Link>\r\n//         <Route path=\"Study\">\r\n//           <Study />\r\n//         </Route>\r\n//         <button class=\"btn btn-danger float-right\">Delete</button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}