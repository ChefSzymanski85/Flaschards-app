{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, deleteDeck, readDeck } from \"../../utils/api\";\nimport Cards from \"./Cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  useEffect(loadDeck, [deckId]);\n\n  function loadDeck() {\n    readDeck(deckId).then(setDeck);\n  }\n\n  function handleDelete() {\n    const confirmed = window.confirm(\"Delete this deck?\\n\\nYou will not be able to recover it.\");\n\n    if (confirmed) {\n      deleteDeck(deck.id).then(() => history.push(\"/decks\"));\n    }\n  }\n\n  function deleteCardHandler(cardId) {\n    const confirmed = window.confirm(\"Delete this card?\\n\\nYou will not be able to recover it.\");\n\n    if (confirmed) {\n      console.log(\"deleteCardHandler\", confirmed, cardId);\n      deleteCard(cardId).then(loadDeck);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"container deck-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"breadcrumb\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"breadcrumb\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"oi oi-home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"breadcrumb-item active\",\n          \"aria-current\": \"page\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mt-0\",\n          children: deck.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), deck.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deck.id}/edit`,\n      className: \"btn btn-secondary mr-2\",\n      title: \"Edit deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-pencil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" Edit\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deck.id}/study`,\n      className: \"btn btn-primary mr-2\",\n      title: \"Study deck\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), \" Study\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/decks/${deck.id}/cards/new`,\n      className: \"btn btn-primary\",\n      title: \"Add Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), \" Add Cards\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger float-right\",\n      title: \"Delete deck\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"oi oi-trash\",\n        onClick: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      deck: deck,\n      onCardDelete: deleteCardHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckView, \"ooXB0JdrHd+4XGpJjAyMDtHkTCU=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = DeckView;\nexport default DeckView; // const [cards, setCards] = useState([]);\n// const { deckId } = useParams();\n// useEffect(() => {\n//   async function getCards() {\n//     const cardsList = await readDeck(deckId);\n//     setCards(cardsList);\n//   }\n//   getCards();\n// }, [deckId]);\n// return <p>Damn this is tough</p>;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/DeckView.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","deleteCard","deleteDeck","readDeck","Cards","DeckView","deck","setDeck","cards","history","deckId","loadDeck","then","handleDelete","confirmed","window","confirm","id","push","deleteCardHandler","cardId","console","log","name","description"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { deleteCard, deleteDeck, readDeck } from \"../../utils/api\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction DeckView() {\r\n  const [deck, setDeck] = useState({ cards: [] });\r\n\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(loadDeck, [deckId]);\r\n\r\n  function loadDeck() {\r\n    readDeck(deckId).then(setDeck);\r\n  }\r\n\r\n  function handleDelete() {\r\n    const confirmed = window.confirm(\r\n      \"Delete this deck?\\n\\nYou will not be able to recover it.\"\r\n    );\r\n    if (confirmed) {\r\n      deleteDeck(deck.id).then(() => history.push(\"/decks\"));\r\n    }\r\n  }\r\n\r\n  function deleteCardHandler(cardId) {\r\n    const confirmed = window.confirm(\r\n      \"Delete this card?\\n\\nYou will not be able to recover it.\"\r\n    );\r\n    if (confirmed) {\r\n      console.log(\"deleteCardHandler\", confirmed, cardId);\r\n      deleteCard(cardId).then(loadDeck);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <main className=\"container deck-view\">\r\n      <nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb\">\r\n          <li className=\"breadcrumb-item\">\r\n            <Link to=\"/\">\r\n              <span className=\"oi oi-home\" /> Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n            {deck.name}\r\n          </li>\r\n        </ol>\r\n      </nav>\r\n      <div className=\"media mb-2\">\r\n        <div className=\"media-body\">\r\n          <h5 className=\"mt-0\">{deck.name}</h5>\r\n          {deck.description}\r\n        </div>\r\n      </div>\r\n      <Link\r\n        to={`/decks/${deck.id}/edit`}\r\n        className=\"btn btn-secondary mr-2\"\r\n        title=\"Edit deck\"\r\n      >\r\n        <span className=\"oi oi-pencil\" /> Edit\r\n      </Link>\r\n      <Link\r\n        to={`/decks/${deck.id}/study`}\r\n        className=\"btn btn-primary mr-2\"\r\n        title=\"Study deck\"\r\n      >\r\n        <span className=\"oi oi-book\" /> Study\r\n      </Link>\r\n      <Link\r\n        to={`/decks/${deck.id}/cards/new`}\r\n        className=\"btn btn-primary\"\r\n        title=\"Add Card\"\r\n      >\r\n        <span className=\"oi oi-plus\" /> Add Cards\r\n      </Link>\r\n      <button className=\"btn btn-danger float-right\" title=\"Delete deck\">\r\n        <span className=\"oi oi-trash\" onClick={handleDelete} />\r\n      </button>\r\n      <Cards deck={deck} onCardDelete={deleteCardHandler} />\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default DeckView;\r\n\r\n// const [cards, setCards] = useState([]);\r\n// const { deckId } = useParams();\r\n\r\n// useEffect(() => {\r\n//   async function getCards() {\r\n//     const cardsList = await readDeck(deckId);\r\n//     setCards(cardsList);\r\n//   }\r\n//   getCards();\r\n// }, [deckId]);\r\n// return <p>Damn this is tough</p>;\r\n"]},"metadata":{},"sourceType":"module"}