{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\DeckView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { deleteCard, deleteDeck, readDeck } from \"../../utils/api\"; //import CardList from \"./\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckView() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    cards: []\n  });\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(loadDeck, [deckId]);\n\n  function loadDeck() {\n    readDeck(deckId).then(setDeck);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    \"aria-label\": \"breadcrumb\",\n    children: /*#__PURE__*/_jsxDEV(\"ol\", {\n      class: \"breadcrumb\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"breadcrumb-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        class: \"breadcrumb-item active\",\n        \"aria-current\": \"page\",\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckView, \"0XJiPsJxqU3+AxT6sp8BMjleeXU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = DeckView;\nexport default DeckView; // const [cards, setCards] = useState([]);\n// const { deckId } = useParams();\n// useEffect(() => {\n//   async function getCards() {\n//     const cardsList = await readDeck(deckId);\n//     setCards(cardsList);\n//   }\n//   getCards();\n// }, [deckId]);\n// return <p>Damn this is tough</p>;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckView\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/DeckView.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","deleteCard","deleteDeck","readDeck","DeckView","deck","setDeck","cards","deckId","history","loadDeck","then","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,QAAjC,QAAiD,iBAAjD,C,CACA;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAAEU,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaR,SAAS,EAA5B;AACA,QAAMS,OAAO,GAAGV,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAACc,QAAD,EAAW,CAACF,MAAD,CAAX,CAAT;;AAEA,WAASE,QAAT,GAAoB;AAClBP,IAAAA,QAAQ,CAACK,MAAD,CAAR,CAAiBG,IAAjB,CAAsBL,OAAtB;AACD;;AAED,sBACE;AAAK,kBAAW,YAAhB;AAAA,2BACE;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA,8BACE;AAAI,QAAA,KAAK,EAAC,iBAAV;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,KAAK,EAAC,wBAAV;AAAmC,wBAAa,MAAhD;AAAA,kBACGD,IAAI,CAACO;AADR;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAvBQR,Q;UAEYJ,S,EACHD,U;;;KAHTK,Q;AAyBT,eAAeA,QAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { deleteCard, deleteDeck, readDeck } from \"../../utils/api\";\r\n//import CardList from \"./\"\r\n\r\nfunction DeckView() {\r\n  const [deck, setDeck] = useState({ cards: [] });\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(loadDeck, [deckId]);\r\n\r\n  function loadDeck() {\r\n    readDeck(deckId).then(setDeck);\r\n  }\r\n\r\n  return (\r\n    <nav aria-label=\"breadcrumb\">\r\n      <ol class=\"breadcrumb\">\r\n        <li class=\"breadcrumb-item\">\r\n          <a href=\"#\">Home</a>\r\n        </li>\r\n        <li class=\"breadcrumb-item active\" aria-current=\"page\">\r\n          {deck.name}\r\n        </li>\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default DeckView;\r\n\r\n// const [cards, setCards] = useState([]);\r\n// const { deckId } = useParams();\r\n\r\n// useEffect(() => {\r\n//   async function getCards() {\r\n//     const cardsList = await readDeck(deckId);\r\n//     setCards(cardsList);\r\n//   }\r\n//   getCards();\r\n// }, [deckId]);\r\n// return <p>Damn this is tough</p>;\r\n"]},"metadata":{},"sourceType":"module"}