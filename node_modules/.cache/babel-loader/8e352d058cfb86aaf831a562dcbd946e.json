{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\CardComponents\\\\CardCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { createCard, readDeck } from \"../utils/api\";\nimport CardForm from \"./CardForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CardCreate() {\n  _s();\n\n  const history = useHistory();\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({\n    cards: []\n  }); // use utility function to get the deck by Id and then set it to deck variable\n\n  useEffect(() => {\n    readDeck(deckId).then(setDeck);\n  }, [deckId]); // use utility function to create a card within the deck using a callback function\n\n  function buttonSubmitHandler(card) {\n    createCard(deckId, card);\n  } // button handler for when the user is finished adding cards\n\n\n  function doneHandler() {\n    history.push(`/decks/${deckId}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        style: {\n          width: \"36rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-home mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), \"Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: deck.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Add Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [deck.name, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n      deckName: deck.name,\n      initialState: deck,\n      onSubmit: buttonSubmitHandler,\n      onDone: doneHandler // Call CardForm component with props\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CardCreate, \"n4Jbf4Z1/0nIRx0r6P6+G/2URDo=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = CardCreate;\nexport default CardCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardCreate\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/CardComponents/CardCreate.js"],"names":["React","useEffect","useState","Link","useHistory","useParams","createCard","readDeck","CardForm","CardCreate","history","deckId","deck","setDeck","cards","then","buttonSubmitHandler","card","doneHandler","push","width","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,SAA3B,QAA4C,kBAA5C;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,cAArC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAaN,SAAS,EAA5B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;AAAEY,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAhC,CAHoB,CAKpB;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ,CAACI,MAAD,CAAR,CAAiBI,IAAjB,CAAsBF,OAAtB;AACD,GAFQ,EAEN,CAACF,MAAD,CAFM,CAAT,CANoB,CAUpB;;AACA,WAASK,mBAAT,CAA6BC,IAA7B,EAAmC;AACjCX,IAAAA,UAAU,CAACK,MAAD,EAASM,IAAT,CAAV;AACD,GAbmB,CAepB;;;AACA,WAASC,WAAT,GAAuB;AACrBR,IAAAA,OAAO,CAACS,IAAR,CAAc,UAASR,MAAO,EAA9B;AACD;;AAED,sBACE;AAAA,4BACE;AAAA,6BACE;AAAK,sBAAW,YAAhB;AAA6B,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAApC;AAAA,+BACE;AAAI,UAAA,SAAS,EAAC,YAAd;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAI,YAAA,SAAS,EAAC,iBAAd;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,EAAE,EAAG,UAAST,MAAO,EAA3B;AAAA,wBAA+BC,IAAI,CAACS;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF,eAUE;AAAI,YAAA,SAAS,EAAC,wBAAd;AAAuC,4BAAa,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAA,iBAAKT,IAAI,CAACS,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,eAoBE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAET,IAAI,CAACS,IADjB;AAEE,MAAA,YAAY,EAAET,IAFhB;AAGE,MAAA,QAAQ,EAAEI,mBAHZ;AAIE,MAAA,MAAM,EAAEE,WAJV,CAKE;;AALF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAlDQT,U;UACSL,U,EACGC,S;;;KAFZI,U;AAoDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { createCard, readDeck } from \"../utils/api\";\r\nimport CardForm from \"./CardForm\";\r\n\r\nfunction CardCreate() {\r\n  const history = useHistory();\r\n  const { deckId } = useParams();\r\n  const [deck, setDeck] = useState({ cards: [] });\r\n\r\n  // use utility function to get the deck by Id and then set it to deck variable\r\n  useEffect(() => {\r\n    readDeck(deckId).then(setDeck);\r\n  }, [deckId]);\r\n\r\n  // use utility function to create a card within the deck using a callback function\r\n  function buttonSubmitHandler(card) {\r\n    createCard(deckId, card);\r\n  }\r\n\r\n  // button handler for when the user is finished adding cards\r\n  function doneHandler() {\r\n    history.push(`/decks/${deckId}`);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\" style={{ width: \"36rem\" }}>\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                <span className=\"oi oi-home mr-1\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to={`/decks/${deckId}`}>{deck.name}</Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Add Card\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <h1>{deck.name}: Add Card</h1>\r\n      <CardForm\r\n        deckName={deck.name}\r\n        initialState={deck}\r\n        onSubmit={buttonSubmitHandler}\r\n        onDone={doneHandler}\r\n        // Call CardForm component with props\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardCreate;\r\n"]},"metadata":{},"sourceType":"module"}