{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\Decks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Decks() {\n  _s();\n\n  const [Decks, setDecks] = useState(null);\n  const {\n    deckId\n  } = useParams();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function loadCard() {\n      try {\n        const response = await fetch(`http://localhost:5000/decks/${deckId}`, {\n          signal: abortController.signal\n        });\n        const deck = await response.json();\n        setDecks(deck);\n      } catch (error) {\n        if (error.name !== \"AbortError\") {\n          console.log(error);\n        }\n      }\n    }\n\n    loadCard();\n    return () => {\n      abortController.abort(); // cancels any pending request or response\n    };\n  }, [deckId]);\n\n  if (deck.id) {\n    // return (\n    //   <div className=\"container\" width=\"36rem\" margin=\"0 auto\">\n    //     {/* TODO: Implement the screen starting here */}\n    //     <a class=\"btn btn-secondary\" href=\"#\" role=\"button\">\n    //       Create deck\n    //     </a>\n    //     <br></br>\n    //     <br></br>\n    //     <div class=\"card\">\n    //       <h5 class=\"card-header\">\n    //         Rendering in React\n    //         <p class=\"float-right font-weight-light\">3 cards</p>\n    //       </h5>\n    //       <div class=\"card-body\">\n    //         <p class=\"card-text\">\n    //           I feel like this is actually supposed to be a card fetched from\n    //           the API.\n    //         </p>\n    //       </div>\n    //       <div class=\"card-footer\">\n    //         <a href=\"#\" class=\"btn btn-secondary mr-2\">\n    //           View\n    //         </a>\n    //         <a href=\"#\" class=\"btn btn-primary\">\n    //           Study\n    //         </a>\n    //         <a href=\"#\" class=\"btn btn-danger float-right\">\n    //           Delete\n    //         </a>\n    //       </div>\n    //     </div>\n    //   </div>\n    // );\n    return Object.entries(deck).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: key\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), \": \", JSON.stringify(value), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this));\n  }\n\n  return \"Loading...\";\n}\n\n_s(Decks, \"wgkoE3/FDyo1a5ntXKth45kq18w=\", false, function () {\n  return [useParams];\n});\n\n_c = Decks;\nexport default Decks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Decks\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/Decks.js"],"names":["React","useEffect","useState","useParams","Decks","setDecks","deckId","abortController","AbortController","loadCard","response","fetch","signal","deck","json","error","name","console","log","abort","id","Object","entries","map","key","value","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACA,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaH,SAAS,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,QAAf,GAA0B;AACxB,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BL,MAAO,EAAvC,EAA0C;AACpEM,UAAAA,MAAM,EAAEL,eAAe,CAACK;AAD4C,SAA1C,CAA5B;AAGA,cAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACAT,QAAAA,QAAQ,CAACQ,IAAD,CAAR;AACD,OAND,CAME,OAAOE,KAAP,EAAc;AACd,YAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AACF;;AAEDN,IAAAA,QAAQ;AAER,WAAO,MAAM;AACXF,MAAAA,eAAe,CAACY,KAAhB,GADW,CACc;AAC1B,KAFD;AAGD,GAtBQ,EAsBN,CAACb,MAAD,CAtBM,CAAT;;AAwBA,MAAIO,IAAI,CAACO,EAAT,EAAa;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAOC,MAAM,CAACC,OAAP,CAAeT,IAAf,EAAqBU,GAArB,CAAyB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,kBAC9B;AAAA,8BACE;AAAA,kBAAQD;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,QACyBE,IAAI,CAACC,SAAL,CAAeF,KAAf,CADzB,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUD,GAAV;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAMD;;AACD,SAAO,YAAP;AACD;;GAtEQpB,K;UAEYD,S;;;KAFZC,K;AAwET,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\n\r\nfunction Decks() {\r\n  const [Decks, setDecks] = useState(null);\r\n  const { deckId } = useParams();\r\n\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n\r\n    async function loadCard() {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/decks/${deckId}`, {\r\n          signal: abortController.signal,\r\n        });\r\n        const deck = await response.json();\r\n        setDecks(deck);\r\n      } catch (error) {\r\n        if (error.name !== \"AbortError\") {\r\n          console.log(error);\r\n        }\r\n      }\r\n    }\r\n\r\n    loadCard();\r\n\r\n    return () => {\r\n      abortController.abort(); // cancels any pending request or response\r\n    };\r\n  }, [deckId]);\r\n\r\n  if (deck.id) {\r\n    // return (\r\n    //   <div className=\"container\" width=\"36rem\" margin=\"0 auto\">\r\n    //     {/* TODO: Implement the screen starting here */}\r\n    //     <a class=\"btn btn-secondary\" href=\"#\" role=\"button\">\r\n    //       Create deck\r\n    //     </a>\r\n    //     <br></br>\r\n    //     <br></br>\r\n    //     <div class=\"card\">\r\n    //       <h5 class=\"card-header\">\r\n    //         Rendering in React\r\n    //         <p class=\"float-right font-weight-light\">3 cards</p>\r\n    //       </h5>\r\n    //       <div class=\"card-body\">\r\n    //         <p class=\"card-text\">\r\n    //           I feel like this is actually supposed to be a card fetched from\r\n    //           the API.\r\n    //         </p>\r\n    //       </div>\r\n    //       <div class=\"card-footer\">\r\n    //         <a href=\"#\" class=\"btn btn-secondary mr-2\">\r\n    //           View\r\n    //         </a>\r\n    //         <a href=\"#\" class=\"btn btn-primary\">\r\n    //           Study\r\n    //         </a>\r\n    //         <a href=\"#\" class=\"btn btn-danger float-right\">\r\n    //           Delete\r\n    //         </a>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    // );\r\n    return Object.entries(deck).map(([key, value]) => (\r\n      <div key={key}>\r\n        <label>{key}</label>: {JSON.stringify(value)}\r\n        <hr />\r\n      </div>\r\n    ));\r\n  }\r\n  return \"Loading...\";\r\n}\r\n\r\nexport default Decks;\r\n"]},"metadata":{},"sourceType":"module"}