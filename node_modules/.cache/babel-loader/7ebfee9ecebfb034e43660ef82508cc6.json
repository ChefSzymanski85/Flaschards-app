{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\components\\\\Study.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { readDeck } from \"../../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Study() {\n  _s();\n\n  const [deck, setDeck] = useState({\n    name: \"Loading...\",\n    cards: []\n  });\n  const [cardNumber, setCardNumber] = useState(1);\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    async function getCards() {\n      const cardsList = await readDeck(deckId);\n      setDeck(cardsList);\n    }\n\n    getCards();\n  }, [deckId]);\n  const cardCount = deck.cards.length;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Damn this is tough\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Study, \"CQFXijl7drK2WVcLG7tusQ/AIFQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/Layout/components/Study.js"],"names":["React","useEffect","useState","useParams","useHistory","readDeck","Study","deck","setDeck","name","cards","cardNumber","setCardNumber","deckId","history","getCards","cardsList","cardCount","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAE,YAAR;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAAD,CAAhC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,SAAS,EAA5B;AACA,QAAMW,OAAO,GAAGV,UAAU,EAA1B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAec,QAAf,GAA0B;AACxB,YAAMC,SAAS,GAAG,MAAMX,QAAQ,CAACQ,MAAD,CAAhC;AACAL,MAAAA,OAAO,CAACQ,SAAD,CAAP;AACD;;AACDD,IAAAA,QAAQ;AACT,GANQ,EAMN,CAACF,MAAD,CANM,CAAT;AAQA,QAAMI,SAAS,GAAGV,IAAI,CAACG,KAAL,CAAWQ,MAA7B;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAlBQZ,K;UAIYH,S,EACHC,U;;;KALTE,K;AAoBT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { readDeck } from \"../../utils/api\";\r\n\r\nfunction Study() {\r\n  const [deck, setDeck] = useState({ name: \"Loading...\", cards: [] });\r\n  const [cardNumber, setCardNumber] = useState(1);\r\n\r\n  const { deckId } = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function getCards() {\r\n      const cardsList = await readDeck(deckId);\r\n      setDeck(cardsList);\r\n    }\r\n    getCards();\r\n  }, [deckId]);\r\n\r\n  const cardCount = deck.cards.length;\r\n\r\n  return <p>Damn this is tough</p>;\r\n}\r\n\r\nexport default Study;\r\n"]},"metadata":{},"sourceType":"module"}