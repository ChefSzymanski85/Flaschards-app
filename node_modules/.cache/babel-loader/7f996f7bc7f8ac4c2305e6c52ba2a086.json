{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosej\\\\Thinkful\\\\qualified-challenges\\\\Project_Flashcards_Qualified_1\\\\src\\\\DeckComponents\\\\DeckCreate.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DeckCreate() {\n  _s();\n\n  const history = useHistory();\n  const [deck, setDeck] = useState({\n    name: \"\",\n    description: \"\"\n  }); // handler used to submit a new deck\n\n  function buttonSubmitHandler(deck) {\n    createDeck(deck).then(createdDeck => history.push(`/decks/${createdDeck.id}`));\n  } // prevent page from reloading after submitting a new deck\n\n\n  function formSubmitHandler(event) {\n    event.preventDefault();\n    buttonSubmitHandler(deck);\n  } // handler used for displaying new deck info\n\n\n  function changeHandler({\n    target: {\n      name,\n      value\n    }\n  }) {\n    setDeck(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  } // using history to go back a page when user clicks cancel button\n\n\n  function cancel() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        style: {\n          width: \"36rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"oi oi-home mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), \"Home\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            \"aria-current\": \"page\",\n            children: \"Create Deck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formSubmitHandler,\n      style: {\n        width: \"36rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"name\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: deck.name,\n          required: true,\n          placeholder: \"Deck Name\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          className: \"form-control\",\n          id: \"description\",\n          rows: \"4\",\n          value: deck.description,\n          required: true,\n          placeholder: \"Brief description of the deck\",\n          onChange: changeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"cancel\",\n        className: \"btn btn-secondary mr-2\",\n        onClick: cancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onSubmit: buttonSubmitHandler,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DeckCreate, \"0lfrVIoE82l+oIW+JQCDTVuAPzc=\", false, function () {\n  return [useHistory];\n});\n\n_c = DeckCreate;\nexport default DeckCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckCreate\");","map":{"version":3,"sources":["C:/Users/rosej/Thinkful/qualified-challenges/Project_Flashcards_Qualified_1/src/DeckComponents/DeckCreate.js"],"names":["React","useState","Link","useHistory","createDeck","DeckCreate","history","deck","setDeck","name","description","buttonSubmitHandler","then","createdDeck","push","id","formSubmitHandler","event","preventDefault","changeHandler","target","value","prevState","cancel","goBack","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { createDeck } from \"../utils/api\";\r\n\r\nfunction DeckCreate() {\r\n  const history = useHistory();\r\n  const [deck, setDeck] = useState({ name: \"\", description: \"\" });\r\n\r\n  // handler used to submit a new deck\r\n  function buttonSubmitHandler(deck) {\r\n    createDeck(deck).then((createdDeck) =>\r\n      history.push(`/decks/${createdDeck.id}`)\r\n    );\r\n  }\r\n\r\n  // prevent page from reloading after submitting a new deck\r\n  function formSubmitHandler(event) {\r\n    event.preventDefault();\r\n    buttonSubmitHandler(deck);\r\n  }\r\n\r\n  // handler used for displaying new deck info\r\n  function changeHandler({ target: { name, value } }) {\r\n    setDeck((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  }\r\n\r\n  // using history to go back a page when user clicks cancel button\r\n  function cancel() {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <nav aria-label=\"breadcrumb\" style={{ width: \"36rem\" }}>\r\n          <ol className=\"breadcrumb\">\r\n            <li className=\"breadcrumb-item\">\r\n              <Link to=\"/\">\r\n                <span className=\"oi oi-home mr-1\" />\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n              Create Deck\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n      </div>\r\n      <h1>Create Deck</h1>\r\n      <form onSubmit={formSubmitHandler} style={{ width: \"36rem\" }}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n            value={deck.name}\r\n            required={true}\r\n            placeholder=\"Deck Name\"\r\n            onChange={changeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <textarea\r\n            name=\"description\"\r\n            className=\"form-control\"\r\n            id=\"description\"\r\n            rows=\"4\"\r\n            value={deck.description}\r\n            required={true}\r\n            placeholder=\"Brief description of the deck\"\r\n            onChange={changeHandler}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          type=\"cancel\"\r\n          className=\"btn btn-secondary mr-2\"\r\n          onClick={cancel}\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary\"\r\n          onSubmit={buttonSubmitHandler}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeckCreate;\r\n"]},"metadata":{},"sourceType":"module"}